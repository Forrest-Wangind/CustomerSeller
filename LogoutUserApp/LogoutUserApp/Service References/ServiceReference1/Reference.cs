//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogoutUserApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] functionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleRemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] functions {
            get {
                return this.functionsField;
            }
            set {
                if ((object.ReferenceEquals(this.functionsField, value) != true)) {
                    this.functionsField = value;
                    this.RaisePropertyChanged("functions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string roleID {
            get {
                return this.roleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.roleIDField, value) != true)) {
                    this.roleIDField = value;
                    this.RaisePropertyChanged("roleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.roleNameField, value) != true)) {
                    this.roleNameField = value;
                    this.RaisePropertyChanged("roleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string roleRemark {
            get {
                return this.roleRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.roleRemarkField, value) != true)) {
                    this.roleRemarkField = value;
                    this.RaisePropertyChanged("roleRemark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime entryTimeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime entryTimeStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] permissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime entryTimeEnd {
            get {
                return this.entryTimeEndField;
            }
            set {
                if ((this.entryTimeEndField.Equals(value) != true)) {
                    this.entryTimeEndField = value;
                    this.RaisePropertyChanged("entryTimeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime entryTimeStart {
            get {
                return this.entryTimeStartField;
            }
            set {
                if ((this.entryTimeStartField.Equals(value) != true)) {
                    this.entryTimeStartField = value;
                    this.RaisePropertyChanged("entryTimeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string exten {
            get {
                return this.extenField;
            }
            set {
                if ((object.ReferenceEquals(this.extenField, value) != true)) {
                    this.extenField = value;
                    this.RaisePropertyChanged("exten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] permissions {
            get {
                return this.permissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.permissionsField, value) != true)) {
                    this.permissionsField = value;
                    this.RaisePropertyChanged("permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role {
            get {
                return this.roleField;
            }
            set {
                if ((object.ReferenceEquals(this.roleField, value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                if ((object.ReferenceEquals(this.userIDField, value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomer", ReplyAction="http://tempuri.org/IService1/GetCustomerResponse")]
        System.Data.DataSet GetCustomer(int PageSize, int CurrentPage, System.Collections.Generic.KeyValuePair<string, string>[] Parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomer", ReplyAction="http://tempuri.org/IService1/GetCustomerResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerAsync(int PageSize, int CurrentPage, System.Collections.Generic.KeyValuePair<string, string>[] Parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerDetail", ReplyAction="http://tempuri.org/IService1/GetCustomerDetailResponse")]
        System.Data.DataSet GetCustomerDetail(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerDetail", ReplyAction="http://tempuri.org/IService1/GetCustomerDetailResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailAsync(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCustomerInfo", ReplyAction="http://tempuri.org/IService1/UpdateCustomerInfoResponse")]
        int UpdateCustomerInfo(string CustomerAddress, string Remark, string PhoneStratus, System.Nullable<System.DateTime> DealTime, string CustomerID, string MobilePhone, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCustomerInfo", ReplyAction="http://tempuri.org/IService1/UpdateCustomerInfoResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerInfoAsync(string CustomerAddress, string Remark, string PhoneStratus, System.Nullable<System.DateTime> DealTime, string CustomerID, string MobilePhone, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BatchImportCustomerInfo", ReplyAction="http://tempuri.org/IService1/BatchImportCustomerInfoResponse")]
        bool BatchImportCustomerInfo(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BatchImportCustomerInfo", ReplyAction="http://tempuri.org/IService1/BatchImportCustomerInfoResponse")]
        System.Threading.Tasks.Task<bool> BatchImportCustomerInfoAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllocateEmployeePhone", ReplyAction="http://tempuri.org/IService1/AllocateEmployeePhoneResponse")]
        int AllocateEmployeePhone(string UserID, string phoneType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllocateEmployeePhone", ReplyAction="http://tempuri.org/IService1/AllocateEmployeePhoneResponse")]
        System.Threading.Tasks.Task<int> AllocateEmployeePhoneAsync(string UserID, string phoneType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RecycleCustomerPhone", ReplyAction="http://tempuri.org/IService1/RecycleCustomerPhoneResponse")]
        int RecycleCustomerPhone(string customerID, string employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RecycleCustomerPhone", ReplyAction="http://tempuri.org/IService1/RecycleCustomerPhoneResponse")]
        System.Threading.Tasks.Task<int> RecycleCustomerPhoneAsync(string customerID, string employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserPermissions", ReplyAction="http://tempuri.org/IService1/GetUserPermissionsResponse")]
        string[] GetUserPermissions(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserPermissions", ReplyAction="http://tempuri.org/IService1/GetUserPermissionsResponse")]
        System.Threading.Tasks.Task<string[]> GetUserPermissionsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoleFunctions", ReplyAction="http://tempuri.org/IService1/GetRoleFunctionsResponse")]
        System.Data.DataSet GetRoleFunctions(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoleFunctions", ReplyAction="http://tempuri.org/IService1/GetRoleFunctionsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRoleFunctionsAsync(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserRoles", ReplyAction="http://tempuri.org/IService1/GetUserRolesResponse")]
        System.Data.DataSet GetUserRoles(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserRoles", ReplyAction="http://tempuri.org/IService1/GetUserRolesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserRolesAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoles", ReplyAction="http://tempuri.org/IService1/GetRolesResponse")]
        System.Data.DataSet GetRoles(LogoutUserApp.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoles", ReplyAction="http://tempuri.org/IService1/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRolesAsync(LogoutUserApp.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPermissions", ReplyAction="http://tempuri.org/IService1/GetPermissionsResponse")]
        System.Data.DataSet GetPermissions(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPermissions", ReplyAction="http://tempuri.org/IService1/GetPermissionsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPermissionsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.Data.DataSet GetUsers(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUsersAsync(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSingleUser", ReplyAction="http://tempuri.org/IService1/GetSingleUserResponse")]
        LogoutUserApp.ServiceReference1.User GetSingleUser(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSingleUser", ReplyAction="http://tempuri.org/IService1/GetSingleUserResponse")]
        System.Threading.Tasks.Task<LogoutUserApp.ServiceReference1.User> GetSingleUserAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        bool AddUser(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRole", ReplyAction="http://tempuri.org/IService1/AddRoleResponse")]
        bool AddRole(LogoutUserApp.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRole", ReplyAction="http://tempuri.org/IService1/AddRoleResponse")]
        System.Threading.Tasks.Task<bool> AddRoleAsync(LogoutUserApp.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        bool UpdateUser(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRole", ReplyAction="http://tempuri.org/IService1/UpdateRoleResponse")]
        bool UpdateRole(LogoutUserApp.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRole", ReplyAction="http://tempuri.org/IService1/UpdateRoleResponse")]
        System.Threading.Tasks.Task<bool> UpdateRoleAsync(LogoutUserApp.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        bool DeleteUser(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRole", ReplyAction="http://tempuri.org/IService1/DeleteRoleResponse")]
        bool DeleteRole(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRole", ReplyAction="http://tempuri.org/IService1/DeleteRoleResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoleAsync(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoleDetail", ReplyAction="http://tempuri.org/IService1/GetRoleDetailResponse")]
        LogoutUserApp.ServiceReference1.Role GetRoleDetail(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoleDetail", ReplyAction="http://tempuri.org/IService1/GetRoleDetailResponse")]
        System.Threading.Tasks.Task<LogoutUserApp.ServiceReference1.Role> GetRoleDetailAsync(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/test", ReplyAction="http://tempuri.org/IService1/testResponse")]
        int test(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/test", ReplyAction="http://tempuri.org/IService1/testResponse")]
        System.Threading.Tasks.Task<int> testAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CallMobilePhone", ReplyAction="http://tempuri.org/IService1/CallMobilePhoneResponse")]
        bool CallMobilePhone(string phone, string employeeID, string employeeExten);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CallMobilePhone", ReplyAction="http://tempuri.org/IService1/CallMobilePhoneResponse")]
        System.Threading.Tasks.Task<bool> CallMobilePhoneAsync(string phone, string employeeID, string employeeExten);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetPhoneParams", ReplyAction="http://tempuri.org/IService1/SetPhoneParamsResponse")]
        bool SetPhoneParams(string dailyNumber, string totalNumber, string phoneType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetPhoneParams", ReplyAction="http://tempuri.org/IService1/SetPhoneParamsResponse")]
        System.Threading.Tasks.Task<bool> SetPhoneParamsAsync(string dailyNumber, string totalNumber, string phoneType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfo", ReplyAction="http://tempuri.org/IService1/GetUserInfoResponse")]
        System.Data.DataSet GetUserInfo(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfo", ReplyAction="http://tempuri.org/IService1/GetUserInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserInfoAsync(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeUserPwd", ReplyAction="http://tempuri.org/IService1/ChangeUserPwdResponse")]
        bool ChangeUserPwd(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeUserPwd", ReplyAction="http://tempuri.org/IService1/ChangeUserPwdResponse")]
        System.Threading.Tasks.Task<bool> ChangeUserPwdAsync(LogoutUserApp.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogoutUser", ReplyAction="http://tempuri.org/IService1/LogoutUserResponse")]
        bool LogoutUser(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogoutUser", ReplyAction="http://tempuri.org/IService1/LogoutUserResponse")]
        System.Threading.Tasks.Task<bool> LogoutUserAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogoutAllUsers", ReplyAction="http://tempuri.org/IService1/LogoutAllUsersResponse")]
        bool LogoutAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogoutAllUsers", ReplyAction="http://tempuri.org/IService1/LogoutAllUsersResponse")]
        System.Threading.Tasks.Task<bool> LogoutAllUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : LogoutUserApp.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<LogoutUserApp.ServiceReference1.IService1>, LogoutUserApp.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCustomer(int PageSize, int CurrentPage, System.Collections.Generic.KeyValuePair<string, string>[] Parameters) {
            return base.Channel.GetCustomer(PageSize, CurrentPage, Parameters);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerAsync(int PageSize, int CurrentPage, System.Collections.Generic.KeyValuePair<string, string>[] Parameters) {
            return base.Channel.GetCustomerAsync(PageSize, CurrentPage, Parameters);
        }
        
        public System.Data.DataSet GetCustomerDetail(string CustomerID) {
            return base.Channel.GetCustomerDetail(CustomerID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailAsync(string CustomerID) {
            return base.Channel.GetCustomerDetailAsync(CustomerID);
        }
        
        public int UpdateCustomerInfo(string CustomerAddress, string Remark, string PhoneStratus, System.Nullable<System.DateTime> DealTime, string CustomerID, string MobilePhone, string CustomerName) {
            return base.Channel.UpdateCustomerInfo(CustomerAddress, Remark, PhoneStratus, DealTime, CustomerID, MobilePhone, CustomerName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerInfoAsync(string CustomerAddress, string Remark, string PhoneStratus, System.Nullable<System.DateTime> DealTime, string CustomerID, string MobilePhone, string CustomerName) {
            return base.Channel.UpdateCustomerInfoAsync(CustomerAddress, Remark, PhoneStratus, DealTime, CustomerID, MobilePhone, CustomerName);
        }
        
        public bool BatchImportCustomerInfo(System.Data.DataSet ds) {
            return base.Channel.BatchImportCustomerInfo(ds);
        }
        
        public System.Threading.Tasks.Task<bool> BatchImportCustomerInfoAsync(System.Data.DataSet ds) {
            return base.Channel.BatchImportCustomerInfoAsync(ds);
        }
        
        public int AllocateEmployeePhone(string UserID, string phoneType) {
            return base.Channel.AllocateEmployeePhone(UserID, phoneType);
        }
        
        public System.Threading.Tasks.Task<int> AllocateEmployeePhoneAsync(string UserID, string phoneType) {
            return base.Channel.AllocateEmployeePhoneAsync(UserID, phoneType);
        }
        
        public int RecycleCustomerPhone(string customerID, string employeeID) {
            return base.Channel.RecycleCustomerPhone(customerID, employeeID);
        }
        
        public System.Threading.Tasks.Task<int> RecycleCustomerPhoneAsync(string customerID, string employeeID) {
            return base.Channel.RecycleCustomerPhoneAsync(customerID, employeeID);
        }
        
        public string[] GetUserPermissions(string userId) {
            return base.Channel.GetUserPermissions(userId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserPermissionsAsync(string userId) {
            return base.Channel.GetUserPermissionsAsync(userId);
        }
        
        public System.Data.DataSet GetRoleFunctions(string roleId) {
            return base.Channel.GetRoleFunctions(roleId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRoleFunctionsAsync(string roleId) {
            return base.Channel.GetRoleFunctionsAsync(roleId);
        }
        
        public System.Data.DataSet GetUserRoles(string userId) {
            return base.Channel.GetUserRoles(userId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserRolesAsync(string userId) {
            return base.Channel.GetUserRolesAsync(userId);
        }
        
        public System.Data.DataSet GetRoles(LogoutUserApp.ServiceReference1.Role role) {
            return base.Channel.GetRoles(role);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRolesAsync(LogoutUserApp.ServiceReference1.Role role) {
            return base.Channel.GetRolesAsync(role);
        }
        
        public System.Data.DataSet GetPermissions(string userId) {
            return base.Channel.GetPermissions(userId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPermissionsAsync(string userId) {
            return base.Channel.GetPermissionsAsync(userId);
        }
        
        public System.Data.DataSet GetUsers(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.GetUsers(user);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUsersAsync(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.GetUsersAsync(user);
        }
        
        public LogoutUserApp.ServiceReference1.User GetSingleUser(string userId) {
            return base.Channel.GetSingleUser(userId);
        }
        
        public System.Threading.Tasks.Task<LogoutUserApp.ServiceReference1.User> GetSingleUserAsync(string userId) {
            return base.Channel.GetSingleUserAsync(userId);
        }
        
        public bool AddUser(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool AddRole(LogoutUserApp.ServiceReference1.Role role) {
            return base.Channel.AddRole(role);
        }
        
        public System.Threading.Tasks.Task<bool> AddRoleAsync(LogoutUserApp.ServiceReference1.Role role) {
            return base.Channel.AddRoleAsync(role);
        }
        
        public bool UpdateUser(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public bool UpdateRole(LogoutUserApp.ServiceReference1.Role role) {
            return base.Channel.UpdateRole(role);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRoleAsync(LogoutUserApp.ServiceReference1.Role role) {
            return base.Channel.UpdateRoleAsync(role);
        }
        
        public bool DeleteUser(string userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public bool DeleteRole(string roleId) {
            return base.Channel.DeleteRole(roleId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoleAsync(string roleId) {
            return base.Channel.DeleteRoleAsync(roleId);
        }
        
        public LogoutUserApp.ServiceReference1.Role GetRoleDetail(string roleId) {
            return base.Channel.GetRoleDetail(roleId);
        }
        
        public System.Threading.Tasks.Task<LogoutUserApp.ServiceReference1.Role> GetRoleDetailAsync(string roleId) {
            return base.Channel.GetRoleDetailAsync(roleId);
        }
        
        public int test(int a) {
            return base.Channel.test(a);
        }
        
        public System.Threading.Tasks.Task<int> testAsync(int a) {
            return base.Channel.testAsync(a);
        }
        
        public bool CallMobilePhone(string phone, string employeeID, string employeeExten) {
            return base.Channel.CallMobilePhone(phone, employeeID, employeeExten);
        }
        
        public System.Threading.Tasks.Task<bool> CallMobilePhoneAsync(string phone, string employeeID, string employeeExten) {
            return base.Channel.CallMobilePhoneAsync(phone, employeeID, employeeExten);
        }
        
        public bool SetPhoneParams(string dailyNumber, string totalNumber, string phoneType) {
            return base.Channel.SetPhoneParams(dailyNumber, totalNumber, phoneType);
        }
        
        public System.Threading.Tasks.Task<bool> SetPhoneParamsAsync(string dailyNumber, string totalNumber, string phoneType) {
            return base.Channel.SetPhoneParamsAsync(dailyNumber, totalNumber, phoneType);
        }
        
        public System.Data.DataSet GetUserInfo(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.GetUserInfo(user);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserInfoAsync(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.GetUserInfoAsync(user);
        }
        
        public bool ChangeUserPwd(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.ChangeUserPwd(user);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeUserPwdAsync(LogoutUserApp.ServiceReference1.User user) {
            return base.Channel.ChangeUserPwdAsync(user);
        }
        
        public bool LogoutUser(string userId) {
            return base.Channel.LogoutUser(userId);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutUserAsync(string userId) {
            return base.Channel.LogoutUserAsync(userId);
        }
        
        public bool LogoutAllUsers() {
            return base.Channel.LogoutAllUsers();
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAllUsersAsync() {
            return base.Channel.LogoutAllUsersAsync();
        }
    }
}
